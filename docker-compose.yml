# Use postgres/example user/password credentials
version: '3.5'

services:
  postgres:
    container_name: postgres_container
    build: ./backend/docker/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-26011948}
      POSTGRES_DB: ${POSTGRES_DB:-tg_ecommerce}
      PGDATA: ${PGDATA:-/data/postgres}
    volumes:
      - postgres:${PGDATA:-/data/postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    build: ./backend/docker/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-26011948}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  # api:
  #   container_name: api
  #   build:
  #     context: ./backend 
  #     dockerfile: Dockerfile
  #   environment:
  #     BASE_URL: "http://localhost:3001/api"
  #     DATABASE_URL: "postgresql://admin:26011948@postgres:5432/tg_ecommerce"  # Изменено с localhost на postgres
  #     JWT_EXP: "1d"
  #     JWT_SECRET: "23234v25435b453b634b6456342234523b5235"
  #     NODE_ENV: "development"
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - postgres
  #   restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
